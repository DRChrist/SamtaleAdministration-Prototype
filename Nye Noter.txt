Arbejde på at lære koncepter i nær tilknytning til problemet med modulære indholdstyper:
	Forsøge at lære designpatterns, ikke bare læse om dem.
	Er der noget databasestruktur eller datastruktur jeg kan undersøge?


Visse dele er nemmere at vide hvad jeg skal skrive om, når jeg har kodet dem.

Hvad vil det sige at systemet skal distribueres gennem HTTP-protokollen?

BuildContentRow:
	How do we pass the resources?
		An array of objects.

	ResourceText: <textfield>
	ResourcePercent: <number>, needs checks for format
	ResourceCheckbox: <checkbox>, probably contains a corresponding array of strings.
	ResourceRadio: <radio>, contains a corresponding array of strings.
	(ResourceTextShort: <text>)


	Mon ikke det ville give mening at splitte spørgsmål og svar helt op? Så de trækker på forskellige resourcer?
	Eller måske skal jeg bare lave specifikke svar-ressourcer?

	Jeg er nødt til at forholde mig til, hvordan jeg skal repræsentere antallet af ressourcer i et contentRow.
	Det jeg gør nu, er at repræsentere dem med et objekt og så sende dem til contentRow-modelmetoderne,
	men burde jeg ikke lave et contentRow-objekt? Selvfølgelig burde jeg lave et ContentRow-objekt,
	men problemstillingen er den samme. Måske burde jeg sende et dictionary (json) fra contentRowController:
	  { question: { resourceText: 1, resourcePercent: 0 }, answer: { resourceText: 1, resourcePercent: 1 } }
  Men giver det mening i forhold til det endelige system? I det endelige system får jeg jo sendt specifikke
  resource-objekter fra front-end, og dem er jeg jo nødt til at akkomodere. Måske sender jeg bare id'et videre,
  men hvad så med answer-delen, hvor objektet er ligegyldigt. Måske laver jeg bare de tomme objekter først.
    { question: { resourceText: 27 }, answer: { resourceText: 526, resourcePercent: 567 } }
